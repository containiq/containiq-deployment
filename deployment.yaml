#namespace
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: containiq
spec: {}
status: {}
---
#notification secret
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: containiq-notification
  namespace: containiq
stringData:
  notification-config.yaml: |
    Key: <CONTAINIQ_API_KEY>
---
#configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-config
  namespace: containiq
data:
  cluster-name: default
---
#deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: containiq
  namespace: containiq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: containiq
  template:
    spec:
      containers:
        - name: containiq
          image: containiq/containiq:v0.7.0
          env:
            - name: NOTIFICATION_FILE_LOCATION
              value: /containiq/notification-config.yaml
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-config
                  key: cluster-name
          volumeMounts:
            - name: containiqconfig
              mountPath: /containiq
          lifecycle:
            preStop:
              exec:
                command: [
                    "/go/bin/shutdown"
                ]
      serviceAccountName: containiq-sa
      volumes:
        - name: containiqconfig
          projected:
            sources:
              - secret:
                  name: containiq-notification
    metadata:
      labels:
        app: containiq
---
#service account
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: containiq-sa
  namespace: containiq
---
#clusterrole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: containiq
rules:
  - apiGroups: ["", "metrics.k8s.io"]
    resources: ["*"]
    verbs: ["get","watch","list"]

---
#clusterrolebinding
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: containiq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: containiq
subjects:
  - kind: ServiceAccount
    namespace: containiq
    name: containiq-sa
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: latency-controller
  namespace: containiq
  labels:
    app: latency-controller
spec:
  selector:
    matchLabels:
      name: latency-controller
  template:
    metadata:
      labels:
        name: latency-controller
    spec:
      containers:
        - name: containiq-latency-controller
          imagePullPolicy: Always
          image: containiq/latency-controller:v0.3.0
          env:
            - name: NOTIFICATION_FILE_LOCATION
              value: /containiq/notification-config.yaml
            - name: API_URL
              value: https://api.containiq.com/ingest/latency
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-config
                  key: cluster-name
          securityContext:
            privileged: true
            capabilities:
              add: [ "SYS_ADMIN","NET_ADMIN" ]
          volumeMounts:
            - name: containiqconfig
              mountPath: /containiq
            - name: host-root
              mountPath: /host # mount the root from host to /host
              readOnly: false
            - name: usr-src-cache
              mountPath: /usr/src
              readOnly: false
            - name: modules-cache
              mountPath: /lib/modules
              readOnly: false
      hostNetwork: true
      hostPID: true
      serviceAccountName: containiq-sa
      volumes:
        - name: usr-src-cache
          hostPath:
            path: /var/cache/containiq/usr/src
        - name: modules-cache
          hostPath:
            path: /var/cache/containiq/lib/modules
        - name: host-root
          hostPath:
            path: /
        - name: containiqconfig
          projected:
            sources:
              - secret:
                  name: containiq-notification
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: containiq
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: containiq
rules:
  - apiGroups:
      - ''
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: containiq
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: containiq
  labels:
    name: fluentd
spec:
  selector:
    matchLabels:
      name: fluentd
  template:
    metadata:
      labels:
        name: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: fluentd
          imagePullPolicy: Always
          image: containiq/logging-agent
          env:
            # https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter#environment-variables-for-kubernetes
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # TODO: should we set this here or another k8s resource?
            - name: INGEST_LOGS_ENDPOINT_URL
              value: https://api.containiq.com/ingest/logs
            - name: NOTIFICATION_FILE_LOCATION
              value: /containiq/notification-config.yaml
            - name: FLUENT_KUBERNETES_METADATA_SKIP_LABELS
              value: 'true'
            - name: FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA
              value: 'true'
            - name: FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA
              value: 'true'
            - name: FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL
              value: 'true'
            - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
              value: /var/log/containers/fluent*
            - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
              value: /^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/
            - name: CLUSTER_NAME
              valueFrom:
               configMapKeyRef:
                 name: cluster-config
                 key: cluster-name
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: containiqconfig
              mountPath: /containiq
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: containiqconfig
          projected:
            sources:
              - secret:
                  name: containiq-notification